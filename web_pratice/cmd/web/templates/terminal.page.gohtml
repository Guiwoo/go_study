{{template "base" .}}

{{define "title"}}
    Virtual Terminal
{{end}}

{{define "content"}}
<h2 class="mt-3 text-center">Virtual Terminal</h2>
<hr>
<div class="alert alert-danger text-center d-none" id="card-messages"></div>
<form action="/payment-succeeded" method="post" name="charge_form" id="charge_form"
class="d-block needs-validation charge-form" autocomplete="off" novalidate="">

    <div class="mb-3">
       <label for="amount" class="form-label">Amount</label>
       <input type="text" class="form-control" id="amount" name="amount"
              required="" autocomplete="amount-new">
    </div>

    <div class="mb-3">
        <label for="cardholder-name" class="form-label">Cardholder Name</label>
        <input type="text" class="form-control" id="cardholder-name" name="cardholder_name"
               required="" autocomplete="cardholder-name-new">
    </div>

    <div class="mb-3">
        <label for="cardholder-email" class="form-label">Cardholder Email</label>
        <input type="email" class="form-control" id="cardholder-email" name="cardholder_email"
               required="" autocomplete="cardholder-email-new">
    </div>

    <!-- card number will be built by stripe -->
    <div class="mb-3">
        <label for="card-element" class="form-label">Credit Card</label>
        <div id="card-element" class="form-control"></div>
        <div class="alert-danger text-center text-center" id="card-errors" role="alert"></div>
        <div class="alert-success text-center text-center" id="card-success" role="alert"></div>
    </div>

    <hr>

    <a id="pay-button" href="javascript:void(0)" class="btn btn-primary" onclick="val()">Charge Card</a>
    <div id="processing-payment" class="text-center d-none ">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>

    <input type="hidden" name="payment_intent" id="payment_intent" value="">
    <input type="hidden" name="payment_method" id="payment_method" value="">
    <input type="hidden" name="payment_amount" id="payment_amount" value="">
    <input type="hidden" name="payment_currency" id="payment_currency" value="">

</form>

{{end}}

{{define "js"}}
<script src="https://js.stripe.com/v3/"></script>
<script>
    let card;
    let stripe;

    const cardMessages = document.getElementById("card-messages");
    const payButton = document.getElementById("pay-button");
    const processing = document.getElementById("processing-payment");

    stripe = Stripe('pk_test_51NJIoBBSb3uvESsU0v3sLAjR1yVYCXWFSLxwsFQbnjkDI9plGCmVxugbuRt45YanEieztV5QH5NFf5pMgFxDyWVI00tRneHyPP')

    const hidePayButton = () => {
        payButton.classList.add("d-none");
        processing.classList.remove("d-none");
    }

    const showPayButtons = () => {
        payButton.classList.remove("d-none");
        processing.classList.add("d-none");
    }
    const showCardError = (message) => {
        cardMessages.classList.add("alert-danger");
        cardMessages.classList.remove("d-none");
        cardMessages.classList.remove("alert-success");
        cardMessages.innerText = message;
    }
    const showCardSuccess = () => {
        cardMessages.classList.add("alert-success");
        cardMessages.classList.remove("d-none");
        cardMessages.classList.remove("alert-danger");
        cardMessages.innerText = "Card charged successfully";
    }

    const val = ()=>{
        let form = document.getElementById('charge_form');
        if (form.checkValidity() === false) {
            this.event.preventDefault();
            this.event.stopPropagation();
        }
        form.classList.add("was-validated");
        hidePayButton()

        let amountToCharge = String(parseFloat(document.getElementById("amount").value) * 100);

        let payload = {
            amount: amountToCharge,
            currency: 'usd',
        }

        const requestOptions = {
            method:'POST',
           headers:{
                'Accept':'application/json',
                'Content-Type':'application/json'
           },
            body: JSON.stringify(payload),
        }
        fetch("http://localhost:4001/api/payment-intent",requestOptions)
            .then(res => res.text())
            .then(res => {
                let data;
                try {
                    data = JSON.parse(res)
                    stripe.confirmCardPayment(data.client_secret,{
                        payment_method: {
                            card: card,
                            billing_details: {
                                name: document.getElementById("cardholder-name").value,
                            }
                        }
                    }).then(function (result){
                        if (result.error){
                            //card declined, or something went wrong with the card
                            showCardError(result.error.message)
                            showPayButtons();
                        }else if(result.paymentIntent){
                           if (result.paymentIntent.status === "succeeded"){
                               // have charged card
                               document.getElementsById("payment_method").value = result.paymentIntent.payment_types[0];
                               document.getElementsById("payment_intent").value = result.paymentIntent.id;
                               document.getElementsById("payment_amount").value = result.paymentIntent.amount;
                               document.getElementsById("payment_currency").value = result.paymentIntent.currency;
                               processing.classList.add("d-none");
                               showCardSuccess();
                               // would submit the form
                           }
                        }
                    })
                }catch (e){
                    console.log(e);
                    showCardError("Invalid response frompayment gateway !.")
                    showPayButtons();
                }
            })
    }

    (function (){
        //create stripe & elements
        const elements = stripe.elements();
        const style = {
           base: {
               fontSize: '16px',
               lineHeight: '24px'
           }
        };

        //create card entry
        card = elements.create('card',{
            style: style,
            hidePostalCode:false,
        });
        card.mount("#card-element");

       //check input error
       card.addEventListener('change',function(event){
           var displayError = document.getElementById("card-errors")
           if (event.error) {
               displayError.classList.remove('d-none');
               displayError.textContent = event.error.message
           }else{
              displayError.classList.add('d-none');
              displayError.textContent = '';
           }
       });
    })();
</script>
{{end}}